
name: Deploy Widget to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v3

      - name: Setup Node.js ‚öôÔ∏è
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install Dependencies üì¶
        run: npm ci

      - name: Extract Repository Name
        id: repo-name
        run: |
          REPO_NAME=$(echo $GITHUB_REPOSITORY | cut -d'/' -f2)
          echo "REPO_NAME=$REPO_NAME" >> $GITHUB_ENV
          echo "Repository name: $REPO_NAME"

      - name: Debug Environment
        run: |
          echo "Repository: $GITHUB_REPOSITORY"
          echo "Repository Name: ${{ env.REPO_NAME }}"
          echo "GitHub Pages URL will be: https://$(echo $GITHUB_REPOSITORY | cut -d'/' -f1).github.io/${{ env.REPO_NAME }}/"
          echo "BASE_URL will be: /${{ env.REPO_NAME }}/"

      - name: Build Widget üî®
        run: npx vite build --config src/vite-widget-config.ts
        env:
          BASE_URL: /${{ env.REPO_NAME }}/
          NODE_ENV: production

      - name: Verify Widget Files Existence
        run: |
          echo "Checking for widget files..."
          if [ -f "dist/treatment-recommender.umd.js" ]; then
            echo "‚úÖ Widget JS file exists at root"
          else
            echo "‚ùå Widget JS file not found at root"
            find dist -name "treatment-recommender*.js" || echo "No widget JS files found anywhere"
          fi
          
          if [ -f "dist/style.css" ]; then
            echo "‚úÖ Widget CSS file exists at root"
          else
            echo "‚ùå Widget CSS file not found at root"
            find dist -name "style*.css" || echo "No widget CSS files found anywhere"
          fi

      - name: Copy Widget Files to Multiple Locations
        run: |
          # Create necessary directories
          mkdir -p dist/assets
          
          # Ensure widget files are at the root level (critical for iframe loading)
          cp dist/treatment-recommender.umd.js dist/ || echo "Failed to copy JS file (may already be there)"
          cp dist/style.css dist/ || echo "Failed to copy CSS file (may already be there)"
          
          # Also copy to assets as fallback
          cp dist/treatment-recommender.umd.js dist/assets/ || echo "Failed to copy JS to assets"
          cp dist/style.css dist/assets/ || echo "Failed to copy CSS to assets"
          
          # Create multiple variations of filenames to handle any path issues
          cp dist/treatment-recommender.umd.js dist/treatment-recommender.js || echo "Failed to create JS alias"
          
          echo "Files at root level:"
          ls -la dist/*.js dist/*.css || echo "No root level files found"
          
          echo "Files in assets directory:"
          ls -la dist/assets/*.js dist/assets/*.css || echo "No files in assets directory"

      - name: Build Main App üèóÔ∏è
        run: npm run build
        env:
          BASE_URL: /${{ env.REPO_NAME }}/

      - name: Copy HTML Files üìã
        run: |
          mkdir -p dist
          cp public/iframe-widget.html dist/
          cp public/iframe-integration-example.html dist/
          cp public/integration-example.html dist/
          cp public/index.html dist/
          cp public/widget-demo.html dist/ || echo "Widget demo file not found, skipping"
          cp public/widget-integration-guide.html dist/ || echo "Integration guide file not found, skipping"

      - name: Create 404.html üîç
        run: |
          cp dist/index.html dist/404.html

      - name: Create Debug Info Files
        run: |
          # Create a file listing all assets
          echo "Asset listing for debugging ($(date)):" > dist/asset-list.txt
          find dist -type f | sort >> dist/asset-list.txt
          
          # Create config debug file
          echo "BASE_URL: /${{ env.REPO_NAME }}/" > dist/debug-info.txt
          echo "Build timestamp: $(date)" >> dist/debug-info.txt
          echo "Repository: $GITHUB_REPOSITORY" >> dist/debug-info.txt
          echo "Files in dist directory:" >> dist/debug-info.txt
          ls -la dist >> dist/debug-info.txt
          
          # Create widget path check page
          cat > dist/widget-path-check.html << EOF
          <!DOCTYPE html>
          <html>
          <head>
            <title>Widget Path Check</title>
          </head>
          <body>
            <h1>Widget Resource Check</h1>
            <ul id="results"></ul>
            
            <script>
              const paths = [
                "treatment-recommender.umd.js",
                "treatment-recommender.js",
                "assets/treatment-recommender.umd.js",
                "assets/treatment-recommender.js",
                "style.css",
                "assets/style.css"
              ];
              
              const resultsList = document.getElementById('results');
              
              paths.forEach(path => {
                const li = document.createElement('li');
                const fullPath = "/${{ env.REPO_NAME }}/" + path;
                fetch(fullPath)
                  .then(response => {
                    if (response.ok) {
                      li.textContent = \`‚úÖ \${fullPath} - FOUND (\${response.status})\`;
                      li.style.color = 'green';
                    } else {
                      li.textContent = \`‚ùå \${fullPath} - NOT FOUND (\${response.status})\`;
                      li.style.color = 'red';
                    }
                  })
                  .catch(error => {
                    li.textContent = \`‚ùå \${fullPath} - ERROR: \${error.message}\`;
                    li.style.color = 'red';
                  });
                resultsList.appendChild(li);
              });
            </script>
          </body>
          </html>
          EOF

      - name: Debug Build Output
        run: |
          echo "Contents of dist directory:"
          ls -la dist
          echo "Contents of dist/assets directory:"
          ls -la dist/assets || echo "No assets directory found"
          echo "Looking for JS and CSS files:"
          find dist -name "*.js" -o -name "*.css"

      - name: Deploy to GitHub Pages üöÄ
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: dist
          branch: gh-pages
          clean: true
