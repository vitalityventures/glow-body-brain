
name: Deploy Widget to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v3

      - name: Setup Node.js ⚙️
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install Dependencies 📦
        run: npm ci

      - name: Extract Repository Name
        id: repo-name
        run: |
          REPO_NAME=$(echo $GITHUB_REPOSITORY | cut -d'/' -f2)
          echo "REPO_NAME=$REPO_NAME" >> $GITHUB_ENV
          echo "Repository name: $REPO_NAME"

      - name: Debug Environment
        run: |
          echo "Repository: $GITHUB_REPOSITORY"
          echo "Repository Name: ${{ env.REPO_NAME }}"
          echo "GitHub Pages URL will be: https://$(echo $GITHUB_REPOSITORY | cut -d'/' -f1).github.io/${{ env.REPO_NAME }}/"
          echo "BASE_URL will be: /${{ env.REPO_NAME }}/"

      - name: Build Widget 🔨
        run: npx vite build --config src/vite-widget-config.ts
        env:
          BASE_URL: /${{ env.REPO_NAME }}/

      - name: Debug Widget Build Output
        run: |
          echo "Contents of dist directory after widget build:"
          ls -la dist
          find dist -name "*.js" -o -name "*.css" | sort

      - name: Build Main App 🏗️
        run: npm run build
        env:
          BASE_URL: /${{ env.REPO_NAME }}/

      - name: Copy HTML Files 📋
        run: |
          mkdir -p dist
          cp public/iframe-widget.html dist/
          cp public/iframe-integration-example.html dist/
          cp public/integration-example.html dist/
          cp public/index.html dist/
          cp public/widget-demo.html dist/ || echo "Widget demo file not found, skipping"
          cp public/widget-integration-guide.html dist/ || echo "Integration guide file not found, skipping"

      - name: Create 404.html 🔍
        run: |
          cp dist/index.html dist/404.html

      # Important: Copy widget files to multiple locations to ensure they're found
      - name: Copy Widget Files to Multiple Locations
        run: |
          # Find all JS and CSS files from the widget build
          echo "Copying widget files to multiple locations to ensure they're found..."
          mkdir -p dist/assets
          
          # Copy directly to dist root (important!)
          find dist -type f -name "treatment-recommender*" -exec cp {} dist/ \;
          find dist -type f -name "style*.css" -exec cp {} dist/ \;
          
          # Also copy to assets directory as fallback
          find dist -type f -name "treatment-recommender*" -exec cp {} dist/assets/ \;
          find dist -type f -name "style*.css" -exec cp {} dist/assets/ \;
          
          echo "Files copied to root level:"
          ls -la dist/*.js dist/*.css || echo "No files at root level"
          
          echo "Files copied to assets directory:"
          ls -la dist/assets/*.js dist/assets/*.css || echo "No files in assets directory"

      - name: Create Debug Info Files
        run: |
          # Create a file listing all assets
          echo "Asset listing for debugging:" > dist/asset-list.txt
          find dist -type f | sort >> dist/asset-list.txt
          
          # Create config debug file
          echo "BASE_URL: /${{ env.REPO_NAME }}/" > dist/debug-info.txt
          echo "Build timestamp: $(date)" >> dist/debug-info.txt
          echo "Repository: $GITHUB_REPOSITORY" >> dist/debug-info.txt
          echo "Files in dist directory:" >> dist/debug-info.txt
          ls -la dist >> dist/debug-info.txt

      - name: Debug Build Output
        run: |
          echo "Contents of dist directory:"
          ls -la dist
          echo "Contents of dist/assets directory:"
          ls -la dist/assets || echo "No assets directory found"
          echo "Looking for JS and CSS files:"
          find dist -name "*.js" -o -name "*.css"

      - name: Deploy to GitHub Pages 🚀
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: dist
          branch: gh-pages
          clean: true

